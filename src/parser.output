Terminals which are not used

   NUMBER


State 159 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 NAME: ID

    2 program: program_head routine DOT

    3 program_head: PROGRAM ID SEMI
    4             | /* empty */

    5 routine: routine_head routine_body

    6 sub_routine: routine_head routine_body

    7 routine_head: label_part const_part type_part var_part routine_part

    8 label_part: /* empty */

    9 const_part: CONST const_expr_list
   10           | /* empty */

   11 const_expr_list: const_expr_list NAME EQUAL const_value SEMI
   12                | NAME EQUAL const_value SEMI

   13 const_value: INTEGER
   14            | REAL
   15            | CHAR
   16            | STRING
   17            | SYS_CON

   18 type_part: TYPE type_decl_list
   19          | /* empty */

   20 type_decl_list: type_decl_list type_definition
   21               | type_definition

   22 type_definition: ID EQUAL type_decl SEMI

   23 type_decl: simple_type_decl
   24          | array_type_decl
   25          | record_type_decl

   26 simple_type_decl: SYS_TYPE
   27                 | NAME
   28                 | LP name_list RP
   29                 | const_value DOT DOT const_value
   30                 | MINUS const_value DOT DOT const_value
   31                 | MINUS const_value DOT DOT MINUS const_value
   32                 | NAME DOT DOT NAME

   33 array_type_decl: ARRAY LB simple_type_decl RB OF type_decl

   34 record_type_decl: RECORD field_decl_list END

   35 field_decl_list: field_decl_list field_decl
   36                | field_decl

   37 field_decl: name_list COLON type_decl SEMI

   38 name_list: name_list COMMA ID
   39          | ID

   40 var_part: VAR var_decl_list
   41         | /* empty */

   42 var_decl_list: var_decl_list var_decl
   43              | var_decl

   44 var_decl: name_list COLON type_decl SEMI

   45 routine_part: routine_part function_decl
   46             | routine_part procedure_decl
   47             | /* empty */

   48 function_decl: function_head SEMI sub_routine SEMI

   49 function_head: FUNCTION ID parameters COLON simple_type_decl

   50 procedure_decl: procedure_head SEMI sub_routine SEMI

   51 procedure_head: PROCEDURE ID parameters

   52 parameters: LP para_decl_list RP
   53           | /* empty */

   54 para_decl_list: para_decl_list SEMI para_type_list
   55               | para_type_list

   56 para_type_list: var_para_list COLON simple_type_decl
   57               | val_para_list COLON simple_type_decl

   58 var_para_list: VAR name_list

   59 val_para_list: name_list

   60 routine_body: compound_stmt

   61 compound_stmt: BEGINN stmt_list END

   62 stmt_list: stmt_list stmt
   63          | stmt_list stmt SEMI
   64          | /* empty */

   65 stmt: INTEGER COLON non_label_stmt
   66     | non_label_stmt

   67 non_label_stmt: assign_stmt
   68               | proc_stmt
   69               | compound_stmt
   70               | if_stmt
   71               | repeat_stmt
   72               | while_stmt
   73               | for_stmt
   74               | case_stmt
   75               | goto_stmt

   76 assign_stmt: ID ASSIGN expression
   77            | ID LB expression RB ASSIGN expression
   78            | ID DOT ID ASSIGN expression

   79 proc_stmt: ID
   80          | ID LP args_list RP
   81          | SYS_PROC
   82          | SYS_PROC LP expression_list RP
   83          | READ LP factor RP

   84 if_stmt: IF expression THEN stmt else_clause

   85 else_clause: ELSE stmt
   86            | /* empty */

   87 repeat_stmt: REPEAT stmt_list UNTIL expression

   88 while_stmt: WHILE expression DO stmt

   89 for_stmt: FOR ID ASSIGN expression direction expression DO stmt

   90 direction: TO
   91          | DOWNTO

   92 case_stmt: CASE expression OF case_expr_list END

   93 case_expr_list: case_expr_list case_expr
   94               | case_expr

   95 case_expr: const_value COLON stmt SEMI
   96          | ID COLON stmt SEMI

   97 goto_stmt: GOTO INTEGER

   98 expression_list: expression_list COMMA expression
   99                | expression

  100 expression: expression GE expr
  101           | expression GT expr
  102           | expression LE expr
  103           | expression LT expr
  104           | expression EQUAL expr
  105           | expression UNEQUAL expr
  106           | expr

  107 expr: expr PLUS term
  108     | expr MINUS term
  109     | expr OR term
  110     | term

  111 term: term MUL factor
  112     | term DIV factor
  113     | term MOD factor
  114     | term AND factor
  115     | factor

  116 factor: NAME
  117       | NAME LP args_list RP
  118       | SYS_FUNCT SYS_FUNCT LP args_list RP
  119       | const_value
  120       | LP expression RP
  121       | NOT factor
  122       | MINUS factor
  123       | ID LB expression RB
  124       | ID DOT ID

  125 args_list: args_list COMMA expression
  126          | expression


Terminals, with rules where they appear

$end (0) 0
error (256)
PROGRAM (258) 3
ID (259) 1 3 22 38 39 49 51 76 77 78 79 80 89 96 123 124
DOT (260) 2 29 30 31 32 78 124
EQUAL (261) 11 12 22 104
LT (262) 103
LE (263) 102
GT (264) 101
GE (265) 100
PLUS (266) 107
MINUS (267) 30 31 108 122
MUL (268) 111
DIV (269) 112
RP (270) 28 52 80 82 83 117 118 120
LP (271) 28 52 80 82 83 117 118 120
ASSIGN (272) 76 77 78 89
COLON (273) 37 44 49 56 57 65 95 96
COMMA (274) 38 98 125
SEMI (275) 3 11 12 22 37 44 48 50 54 63 95 96
IF (276) 84
THEN (277) 84
ELSE (278) 85
WHILE (279) 88
DO (280) 88 89
BEGINN (281) 61
END (282) 34 61 92
CASE (283) 92
DOWNTO (284) 91
FOR (285) 89
GOTO (286) 97
INTEGER (287) 13 65 97
LB (288) 33 77 123
RB (289) 33 77 123
NOT (290) 121
OR (291) 109
AND (292) 114
MOD (293) 113
OF (294) 33 92
READ (295) 83
REPEAT (296) 87
TO (297) 90
UNEQUAL (298) 105
UNTIL (299) 87
NUMBER (300)
SYS_CON (301) 17
SYS_FUNCT (302) 118
SYS_PROC (303) 81 82
SYS_TYPE (304) 26
CHAR (305) 15
CONST (306) 9
STRING (307) 16
REAL (308) 14
ARRAY (309) 33
VAR (310) 40 58
PROCEDURE (311) 51
RECORD (312) 34
FUNCTION (313) 49
TYPE (314) 18


Nonterminals, with rules where they appear

$accept (60)
    on left: 0
NAME (61)
    on left: 1, on right: 11 12 27 32 116 117
program (62)
    on left: 2, on right: 0
program_head (63)
    on left: 3 4, on right: 2
routine (64)
    on left: 5, on right: 2
sub_routine (65)
    on left: 6, on right: 48 50
routine_head (66)
    on left: 7, on right: 5 6
label_part (67)
    on left: 8, on right: 7
const_part (68)
    on left: 9 10, on right: 7
const_expr_list (69)
    on left: 11 12, on right: 9 11
const_value (70)
    on left: 13 14 15 16 17, on right: 11 12 29 30 31 95 119
type_part (71)
    on left: 18 19, on right: 7
type_decl_list (72)
    on left: 20 21, on right: 18 20
type_definition (73)
    on left: 22, on right: 20 21
type_decl (74)
    on left: 23 24 25, on right: 22 33 37 44
simple_type_decl (75)
    on left: 26 27 28 29 30 31 32, on right: 23 33 49 56 57
array_type_decl (76)
    on left: 33, on right: 24
record_type_decl (77)
    on left: 34, on right: 25
field_decl_list (78)
    on left: 35 36, on right: 34 35
field_decl (79)
    on left: 37, on right: 35 36
name_list (80)
    on left: 38 39, on right: 28 37 38 44 58 59
var_part (81)
    on left: 40 41, on right: 7
var_decl_list (82)
    on left: 42 43, on right: 40 42
var_decl (83)
    on left: 44, on right: 42 43
routine_part (84)
    on left: 45 46 47, on right: 7 45 46
function_decl (85)
    on left: 48, on right: 45
function_head (86)
    on left: 49, on right: 48
procedure_decl (87)
    on left: 50, on right: 46
procedure_head (88)
    on left: 51, on right: 50
parameters (89)
    on left: 52 53, on right: 49 51
para_decl_list (90)
    on left: 54 55, on right: 52 54
para_type_list (91)
    on left: 56 57, on right: 54 55
var_para_list (92)
    on left: 58, on right: 56
val_para_list (93)
    on left: 59, on right: 57
routine_body (94)
    on left: 60, on right: 5 6
compound_stmt (95)
    on left: 61, on right: 60 69
stmt_list (96)
    on left: 62 63 64, on right: 61 62 63 87
stmt (97)
    on left: 65 66, on right: 62 63 84 85 88 89 95 96
non_label_stmt (98)
    on left: 67 68 69 70 71 72 73 74 75, on right: 65 66
assign_stmt (99)
    on left: 76 77 78, on right: 67
proc_stmt (100)
    on left: 79 80 81 82 83, on right: 68
if_stmt (101)
    on left: 84, on right: 70
else_clause (102)
    on left: 85 86, on right: 84
repeat_stmt (103)
    on left: 87, on right: 71
while_stmt (104)
    on left: 88, on right: 72
for_stmt (105)
    on left: 89, on right: 73
direction (106)
    on left: 90 91, on right: 89
case_stmt (107)
    on left: 92, on right: 74
case_expr_list (108)
    on left: 93 94, on right: 92 93
case_expr (109)
    on left: 95 96, on right: 93 94
goto_stmt (110)
    on left: 97, on right: 75
expression_list (111)
    on left: 98 99, on right: 82 98
expression (112)
    on left: 100 101 102 103 104 105 106, on right: 76 77 78 84 87
    88 89 92 98 99 100 101 102 103 104 105 120 123 125 126
expr (113)
    on left: 107 108 109 110, on right: 100 101 102 103 104 105 106
    107 108 109
term (114)
    on left: 111 112 113 114 115, on right: 107 108 109 110 111 112
    113 114
factor (115)
    on left: 116 117 118 119 120 121 122 123 124, on right: 83 111
    112 113 114 115 121 122
args_list (116)
    on left: 125 126, on right: 80 117 118 125


state 0

    0 $accept: . program $end

    PROGRAM  shift, and go to state 1

    $default  reduce using rule 4 (program_head)

    program       go to state 2
    program_head  go to state 3


state 1

    3 program_head: PROGRAM . ID SEMI

    ID  shift, and go to state 4


state 2

    0 $accept: program . $end

    $end  shift, and go to state 5


state 3

    2 program: program_head . routine DOT

    $default  reduce using rule 8 (label_part)

    routine       go to state 6
    routine_head  go to state 7
    label_part    go to state 8


state 4

    3 program_head: PROGRAM ID . SEMI

    SEMI  shift, and go to state 9


state 5

    0 $accept: program $end .

    $default  accept


state 6

    2 program: program_head routine . DOT

    DOT  shift, and go to state 10


state 7

    5 routine: routine_head . routine_body

    BEGINN  shift, and go to state 11

    routine_body   go to state 12
    compound_stmt  go to state 13


state 8

    7 routine_head: label_part . const_part type_part var_part routine_part

    CONST  shift, and go to state 14

    $default  reduce using rule 10 (const_part)

    const_part  go to state 15


state 9

    3 program_head: PROGRAM ID SEMI .

    $default  reduce using rule 3 (program_head)


state 10

    2 program: program_head routine DOT .

    $default  reduce using rule 2 (program)


state 11

   61 compound_stmt: BEGINN . stmt_list END

    $default  reduce using rule 64 (stmt_list)

    stmt_list  go to state 16


state 12

    5 routine: routine_head routine_body .

    $default  reduce using rule 5 (routine)


state 13

   60 routine_body: compound_stmt .

    $default  reduce using rule 60 (routine_body)


state 14

    9 const_part: CONST . const_expr_list

    ID  shift, and go to state 17

    NAME             go to state 18
    const_expr_list  go to state 19


state 15

    7 routine_head: label_part const_part . type_part var_part routine_part

    TYPE  shift, and go to state 20

    $default  reduce using rule 19 (type_part)

    type_part  go to state 21


state 16

   61 compound_stmt: BEGINN stmt_list . END
   62 stmt_list: stmt_list . stmt
   63          | stmt_list . stmt SEMI

    ID        shift, and go to state 22
    IF        shift, and go to state 23
    WHILE     shift, and go to state 24
    BEGINN    shift, and go to state 11
    END       shift, and go to state 25
    CASE      shift, and go to state 26
    FOR       shift, and go to state 27
    GOTO      shift, and go to state 28
    INTEGER   shift, and go to state 29
    READ      shift, and go to state 30
    REPEAT    shift, and go to state 31
    SYS_PROC  shift, and go to state 32

    compound_stmt   go to state 33
    stmt            go to state 34
    non_label_stmt  go to state 35
    assign_stmt     go to state 36
    proc_stmt       go to state 37
    if_stmt         go to state 38
    repeat_stmt     go to state 39
    while_stmt      go to state 40
    for_stmt        go to state 41
    case_stmt       go to state 42
    goto_stmt       go to state 43


state 17

    1 NAME: ID .

    $default  reduce using rule 1 (NAME)


state 18

   12 const_expr_list: NAME . EQUAL const_value SEMI

    EQUAL  shift, and go to state 44


state 19

    9 const_part: CONST const_expr_list .
   11 const_expr_list: const_expr_list . NAME EQUAL const_value SEMI

    ID  shift, and go to state 17

    $default  reduce using rule 9 (const_part)

    NAME  go to state 45


state 20

   18 type_part: TYPE . type_decl_list

    ID  shift, and go to state 46

    type_decl_list   go to state 47
    type_definition  go to state 48


state 21

    7 routine_head: label_part const_part type_part . var_part routine_part

    VAR  shift, and go to state 49

    $default  reduce using rule 41 (var_part)

    var_part  go to state 50


state 22

   76 assign_stmt: ID . ASSIGN expression
   77            | ID . LB expression RB ASSIGN expression
   78            | ID . DOT ID ASSIGN expression
   79 proc_stmt: ID .
   80          | ID . LP args_list RP

    DOT     shift, and go to state 51
    LP      shift, and go to state 52
    ASSIGN  shift, and go to state 53
    LB      shift, and go to state 54

    $default  reduce using rule 79 (proc_stmt)


state 23

   84 if_stmt: IF . expression THEN stmt else_clause

    ID         shift, and go to state 55
    MINUS      shift, and go to state 56
    LP         shift, and go to state 57
    INTEGER    shift, and go to state 58
    NOT        shift, and go to state 59
    SYS_CON    shift, and go to state 60
    SYS_FUNCT  shift, and go to state 61
    CHAR       shift, and go to state 62
    STRING     shift, and go to state 63
    REAL       shift, and go to state 64

    NAME         go to state 65
    const_value  go to state 66
    expression   go to state 67
    expr         go to state 68
    term         go to state 69
    factor       go to state 70


state 24

   88 while_stmt: WHILE . expression DO stmt

    ID         shift, and go to state 55
    MINUS      shift, and go to state 56
    LP         shift, and go to state 57
    INTEGER    shift, and go to state 58
    NOT        shift, and go to state 59
    SYS_CON    shift, and go to state 60
    SYS_FUNCT  shift, and go to state 61
    CHAR       shift, and go to state 62
    STRING     shift, and go to state 63
    REAL       shift, and go to state 64

    NAME         go to state 65
    const_value  go to state 66
    expression   go to state 71
    expr         go to state 68
    term         go to state 69
    factor       go to state 70


state 25

   61 compound_stmt: BEGINN stmt_list END .

    $default  reduce using rule 61 (compound_stmt)


state 26

   92 case_stmt: CASE . expression OF case_expr_list END

    ID         shift, and go to state 55
    MINUS      shift, and go to state 56
    LP         shift, and go to state 57
    INTEGER    shift, and go to state 58
    NOT        shift, and go to state 59
    SYS_CON    shift, and go to state 60
    SYS_FUNCT  shift, and go to state 61
    CHAR       shift, and go to state 62
    STRING     shift, and go to state 63
    REAL       shift, and go to state 64

    NAME         go to state 65
    const_value  go to state 66
    expression   go to state 72
    expr         go to state 68
    term         go to state 69
    factor       go to state 70


state 27

   89 for_stmt: FOR . ID ASSIGN expression direction expression DO stmt

    ID  shift, and go to state 73


state 28

   97 goto_stmt: GOTO . INTEGER

    INTEGER  shift, and go to state 74


state 29

   65 stmt: INTEGER . COLON non_label_stmt

    COLON  shift, and go to state 75


state 30

   83 proc_stmt: READ . LP factor RP

    LP  shift, and go to state 76


state 31

   87 repeat_stmt: REPEAT . stmt_list UNTIL expression

    $default  reduce using rule 64 (stmt_list)

    stmt_list  go to state 77


state 32

   81 proc_stmt: SYS_PROC .
   82          | SYS_PROC . LP expression_list RP

    LP  shift, and go to state 78

    $default  reduce using rule 81 (proc_stmt)


state 33

   69 non_label_stmt: compound_stmt .

    $default  reduce using rule 69 (non_label_stmt)


state 34

   62 stmt_list: stmt_list stmt .
   63          | stmt_list stmt . SEMI

    SEMI  shift, and go to state 79

    $default  reduce using rule 62 (stmt_list)


state 35

   66 stmt: non_label_stmt .

    $default  reduce using rule 66 (stmt)


state 36

   67 non_label_stmt: assign_stmt .

    $default  reduce using rule 67 (non_label_stmt)


state 37

   68 non_label_stmt: proc_stmt .

    $default  reduce using rule 68 (non_label_stmt)


state 38

   70 non_label_stmt: if_stmt .

    $default  reduce using rule 70 (non_label_stmt)


state 39

   71 non_label_stmt: repeat_stmt .

    $default  reduce using rule 71 (non_label_stmt)


state 40

   72 non_label_stmt: while_stmt .

    $default  reduce using rule 72 (non_label_stmt)


state 41

   73 non_label_stmt: for_stmt .

    $default  reduce using rule 73 (non_label_stmt)


state 42

   74 non_label_stmt: case_stmt .

    $default  reduce using rule 74 (non_label_stmt)


state 43

   75 non_label_stmt: goto_stmt .

    $default  reduce using rule 75 (non_label_stmt)


state 44

   12 const_expr_list: NAME EQUAL . const_value SEMI

    INTEGER  shift, and go to state 58
    SYS_CON  shift, and go to state 60
    CHAR     shift, and go to state 62
    STRING   shift, and go to state 63
    REAL     shift, and go to state 64

    const_value  go to state 80


state 45

   11 const_expr_list: const_expr_list NAME . EQUAL const_value SEMI

    EQUAL  shift, and go to state 81


state 46

   22 type_definition: ID . EQUAL type_decl SEMI

    EQUAL  shift, and go to state 82


state 47

   18 type_part: TYPE type_decl_list .
   20 type_decl_list: type_decl_list . type_definition

    ID  shift, and go to state 46

    $default  reduce using rule 18 (type_part)

    type_definition  go to state 83


state 48

   21 type_decl_list: type_definition .

    $default  reduce using rule 21 (type_decl_list)


state 49

   40 var_part: VAR . var_decl_list

    ID  shift, and go to state 84

    name_list      go to state 85
    var_decl_list  go to state 86
    var_decl       go to state 87


state 50

    7 routine_head: label_part const_part type_part var_part . routine_part

    $default  reduce using rule 47 (routine_part)

    routine_part  go to state 88


state 51

   78 assign_stmt: ID DOT . ID ASSIGN expression

    ID  shift, and go to state 89


state 52

   80 proc_stmt: ID LP . args_list RP

    ID         shift, and go to state 55
    MINUS      shift, and go to state 56
    LP         shift, and go to state 57
    INTEGER    shift, and go to state 58
    NOT        shift, and go to state 59
    SYS_CON    shift, and go to state 60
    SYS_FUNCT  shift, and go to state 61
    CHAR       shift, and go to state 62
    STRING     shift, and go to state 63
    REAL       shift, and go to state 64

    NAME         go to state 65
    const_value  go to state 66
    expression   go to state 90
    expr         go to state 68
    term         go to state 69
    factor       go to state 70
    args_list    go to state 91


state 53

   76 assign_stmt: ID ASSIGN . expression

    ID         shift, and go to state 55
    MINUS      shift, and go to state 56
    LP         shift, and go to state 57
    INTEGER    shift, and go to state 58
    NOT        shift, and go to state 59
    SYS_CON    shift, and go to state 60
    SYS_FUNCT  shift, and go to state 61
    CHAR       shift, and go to state 62
    STRING     shift, and go to state 63
    REAL       shift, and go to state 64

    NAME         go to state 65
    const_value  go to state 66
    expression   go to state 92
    expr         go to state 68
    term         go to state 69
    factor       go to state 70


state 54

   77 assign_stmt: ID LB . expression RB ASSIGN expression

    ID         shift, and go to state 55
    MINUS      shift, and go to state 56
    LP         shift, and go to state 57
    INTEGER    shift, and go to state 58
    NOT        shift, and go to state 59
    SYS_CON    shift, and go to state 60
    SYS_FUNCT  shift, and go to state 61
    CHAR       shift, and go to state 62
    STRING     shift, and go to state 63
    REAL       shift, and go to state 64

    NAME         go to state 65
    const_value  go to state 66
    expression   go to state 93
    expr         go to state 68
    term         go to state 69
    factor       go to state 70


state 55

    1 NAME: ID .
  123 factor: ID . LB expression RB
  124       | ID . DOT ID

    DOT  shift, and go to state 94
    LB   shift, and go to state 95

    $default  reduce using rule 1 (NAME)


state 56

  122 factor: MINUS . factor

    ID         shift, and go to state 55
    MINUS      shift, and go to state 56
    LP         shift, and go to state 57
    INTEGER    shift, and go to state 58
    NOT        shift, and go to state 59
    SYS_CON    shift, and go to state 60
    SYS_FUNCT  shift, and go to state 61
    CHAR       shift, and go to state 62
    STRING     shift, and go to state 63
    REAL       shift, and go to state 64

    NAME         go to state 65
    const_value  go to state 66
    factor       go to state 96


state 57

  120 factor: LP . expression RP

    ID         shift, and go to state 55
    MINUS      shift, and go to state 56
    LP         shift, and go to state 57
    INTEGER    shift, and go to state 58
    NOT        shift, and go to state 59
    SYS_CON    shift, and go to state 60
    SYS_FUNCT  shift, and go to state 61
    CHAR       shift, and go to state 62
    STRING     shift, and go to state 63
    REAL       shift, and go to state 64

    NAME         go to state 65
    const_value  go to state 66
    expression   go to state 97
    expr         go to state 68
    term         go to state 69
    factor       go to state 70


state 58

   13 const_value: INTEGER .

    $default  reduce using rule 13 (const_value)


state 59

  121 factor: NOT . factor

    ID         shift, and go to state 55
    MINUS      shift, and go to state 56
    LP         shift, and go to state 57
    INTEGER    shift, and go to state 58
    NOT        shift, and go to state 59
    SYS_CON    shift, and go to state 60
    SYS_FUNCT  shift, and go to state 61
    CHAR       shift, and go to state 62
    STRING     shift, and go to state 63
    REAL       shift, and go to state 64

    NAME         go to state 65
    const_value  go to state 66
    factor       go to state 98


state 60

   17 const_value: SYS_CON .

    $default  reduce using rule 17 (const_value)


state 61

  118 factor: SYS_FUNCT . SYS_FUNCT LP args_list RP

    SYS_FUNCT  shift, and go to state 99


state 62

   15 const_value: CHAR .

    $default  reduce using rule 15 (const_value)


state 63

   16 const_value: STRING .

    $default  reduce using rule 16 (const_value)


state 64

   14 const_value: REAL .

    $default  reduce using rule 14 (const_value)


state 65

  116 factor: NAME .
  117       | NAME . LP args_list RP

    LP  shift, and go to state 100

    $default  reduce using rule 116 (factor)


state 66

  119 factor: const_value .

    $default  reduce using rule 119 (factor)


state 67

   84 if_stmt: IF expression . THEN stmt else_clause
  100 expression: expression . GE expr
  101           | expression . GT expr
  102           | expression . LE expr
  103           | expression . LT expr
  104           | expression . EQUAL expr
  105           | expression . UNEQUAL expr

    EQUAL    shift, and go to state 101
    LT       shift, and go to state 102
    LE       shift, and go to state 103
    GT       shift, and go to state 104
    GE       shift, and go to state 105
    THEN     shift, and go to state 106
    UNEQUAL  shift, and go to state 107


state 68

  106 expression: expr .
  107 expr: expr . PLUS term
  108     | expr . MINUS term
  109     | expr . OR term

    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    OR     shift, and go to state 110

    $default  reduce using rule 106 (expression)


state 69

  110 expr: term .
  111 term: term . MUL factor
  112     | term . DIV factor
  113     | term . MOD factor
  114     | term . AND factor

    MUL  shift, and go to state 111
    DIV  shift, and go to state 112
    AND  shift, and go to state 113
    MOD  shift, and go to state 114

    $default  reduce using rule 110 (expr)


state 70

  115 term: factor .

    $default  reduce using rule 115 (term)


state 71

   88 while_stmt: WHILE expression . DO stmt
  100 expression: expression . GE expr
  101           | expression . GT expr
  102           | expression . LE expr
  103           | expression . LT expr
  104           | expression . EQUAL expr
  105           | expression . UNEQUAL expr

    EQUAL    shift, and go to state 101
    LT       shift, and go to state 102
    LE       shift, and go to state 103
    GT       shift, and go to state 104
    GE       shift, and go to state 105
    DO       shift, and go to state 115
    UNEQUAL  shift, and go to state 107


state 72

   92 case_stmt: CASE expression . OF case_expr_list END
  100 expression: expression . GE expr
  101           | expression . GT expr
  102           | expression . LE expr
  103           | expression . LT expr
  104           | expression . EQUAL expr
  105           | expression . UNEQUAL expr

    EQUAL    shift, and go to state 101
    LT       shift, and go to state 102
    LE       shift, and go to state 103
    GT       shift, and go to state 104
    GE       shift, and go to state 105
    OF       shift, and go to state 116
    UNEQUAL  shift, and go to state 107


state 73

   89 for_stmt: FOR ID . ASSIGN expression direction expression DO stmt

    ASSIGN  shift, and go to state 117


state 74

   97 goto_stmt: GOTO INTEGER .

    $default  reduce using rule 97 (goto_stmt)


state 75

   65 stmt: INTEGER COLON . non_label_stmt

    ID        shift, and go to state 22
    IF        shift, and go to state 23
    WHILE     shift, and go to state 24
    BEGINN    shift, and go to state 11
    CASE      shift, and go to state 26
    FOR       shift, and go to state 27
    GOTO      shift, and go to state 28
    READ      shift, and go to state 30
    REPEAT    shift, and go to state 31
    SYS_PROC  shift, and go to state 32

    compound_stmt   go to state 33
    non_label_stmt  go to state 118
    assign_stmt     go to state 36
    proc_stmt       go to state 37
    if_stmt         go to state 38
    repeat_stmt     go to state 39
    while_stmt      go to state 40
    for_stmt        go to state 41
    case_stmt       go to state 42
    goto_stmt       go to state 43


state 76

   83 proc_stmt: READ LP . factor RP

    ID         shift, and go to state 55
    MINUS      shift, and go to state 56
    LP         shift, and go to state 57
    INTEGER    shift, and go to state 58
    NOT        shift, and go to state 59
    SYS_CON    shift, and go to state 60
    SYS_FUNCT  shift, and go to state 61
    CHAR       shift, and go to state 62
    STRING     shift, and go to state 63
    REAL       shift, and go to state 64

    NAME         go to state 65
    const_value  go to state 66
    factor       go to state 119


state 77

   62 stmt_list: stmt_list . stmt
   63          | stmt_list . stmt SEMI
   87 repeat_stmt: REPEAT stmt_list . UNTIL expression

    ID        shift, and go to state 22
    IF        shift, and go to state 23
    WHILE     shift, and go to state 24
    BEGINN    shift, and go to state 11
    CASE      shift, and go to state 26
    FOR       shift, and go to state 27
    GOTO      shift, and go to state 28
    INTEGER   shift, and go to state 29
    READ      shift, and go to state 30
    REPEAT    shift, and go to state 31
    UNTIL     shift, and go to state 120
    SYS_PROC  shift, and go to state 32

    compound_stmt   go to state 33
    stmt            go to state 34
    non_label_stmt  go to state 35
    assign_stmt     go to state 36
    proc_stmt       go to state 37
    if_stmt         go to state 38
    repeat_stmt     go to state 39
    while_stmt      go to state 40
    for_stmt        go to state 41
    case_stmt       go to state 42
    goto_stmt       go to state 43


state 78

   82 proc_stmt: SYS_PROC LP . expression_list RP

    ID         shift, and go to state 55
    MINUS      shift, and go to state 56
    LP         shift, and go to state 57
    INTEGER    shift, and go to state 58
    NOT        shift, and go to state 59
    SYS_CON    shift, and go to state 60
    SYS_FUNCT  shift, and go to state 61
    CHAR       shift, and go to state 62
    STRING     shift, and go to state 63
    REAL       shift, and go to state 64

    NAME             go to state 65
    const_value      go to state 66
    expression_list  go to state 121
    expression       go to state 122
    expr             go to state 68
    term             go to state 69
    factor           go to state 70


state 79

   63 stmt_list: stmt_list stmt SEMI .

    $default  reduce using rule 63 (stmt_list)


state 80

   12 const_expr_list: NAME EQUAL const_value . SEMI

    SEMI  shift, and go to state 123


state 81

   11 const_expr_list: const_expr_list NAME EQUAL . const_value SEMI

    INTEGER  shift, and go to state 58
    SYS_CON  shift, and go to state 60
    CHAR     shift, and go to state 62
    STRING   shift, and go to state 63
    REAL     shift, and go to state 64

    const_value  go to state 124


state 82

   22 type_definition: ID EQUAL . type_decl SEMI

    ID        shift, and go to state 17
    MINUS     shift, and go to state 125
    LP        shift, and go to state 126
    INTEGER   shift, and go to state 58
    SYS_CON   shift, and go to state 60
    SYS_TYPE  shift, and go to state 127
    CHAR      shift, and go to state 62
    STRING    shift, and go to state 63
    REAL      shift, and go to state 64
    ARRAY     shift, and go to state 128
    RECORD    shift, and go to state 129

    NAME              go to state 130
    const_value       go to state 131
    type_decl         go to state 132
    simple_type_decl  go to state 133
    array_type_decl   go to state 134
    record_type_decl  go to state 135


state 83

   20 type_decl_list: type_decl_list type_definition .

    $default  reduce using rule 20 (type_decl_list)


state 84

   39 name_list: ID .

    $default  reduce using rule 39 (name_list)


state 85

   38 name_list: name_list . COMMA ID
   44 var_decl: name_list . COLON type_decl SEMI

    COLON  shift, and go to state 136
    COMMA  shift, and go to state 137


state 86

   40 var_part: VAR var_decl_list .
   42 var_decl_list: var_decl_list . var_decl

    ID  shift, and go to state 84

    $default  reduce using rule 40 (var_part)

    name_list  go to state 85
    var_decl   go to state 138


state 87

   43 var_decl_list: var_decl .

    $default  reduce using rule 43 (var_decl_list)


state 88

    7 routine_head: label_part const_part type_part var_part routine_part .
   45 routine_part: routine_part . function_decl
   46             | routine_part . procedure_decl

    PROCEDURE  shift, and go to state 139
    FUNCTION   shift, and go to state 140

    $default  reduce using rule 7 (routine_head)

    function_decl   go to state 141
    function_head   go to state 142
    procedure_decl  go to state 143
    procedure_head  go to state 144


state 89

   78 assign_stmt: ID DOT ID . ASSIGN expression

    ASSIGN  shift, and go to state 145


state 90

  100 expression: expression . GE expr
  101           | expression . GT expr
  102           | expression . LE expr
  103           | expression . LT expr
  104           | expression . EQUAL expr
  105           | expression . UNEQUAL expr
  126 args_list: expression .

    EQUAL    shift, and go to state 101
    LT       shift, and go to state 102
    LE       shift, and go to state 103
    GT       shift, and go to state 104
    GE       shift, and go to state 105
    UNEQUAL  shift, and go to state 107

    $default  reduce using rule 126 (args_list)


state 91

   80 proc_stmt: ID LP args_list . RP
  125 args_list: args_list . COMMA expression

    RP     shift, and go to state 146
    COMMA  shift, and go to state 147


state 92

   76 assign_stmt: ID ASSIGN expression .
  100 expression: expression . GE expr
  101           | expression . GT expr
  102           | expression . LE expr
  103           | expression . LT expr
  104           | expression . EQUAL expr
  105           | expression . UNEQUAL expr

    EQUAL    shift, and go to state 101
    LT       shift, and go to state 102
    LE       shift, and go to state 103
    GT       shift, and go to state 104
    GE       shift, and go to state 105
    UNEQUAL  shift, and go to state 107

    $default  reduce using rule 76 (assign_stmt)


state 93

   77 assign_stmt: ID LB expression . RB ASSIGN expression
  100 expression: expression . GE expr
  101           | expression . GT expr
  102           | expression . LE expr
  103           | expression . LT expr
  104           | expression . EQUAL expr
  105           | expression . UNEQUAL expr

    EQUAL    shift, and go to state 101
    LT       shift, and go to state 102
    LE       shift, and go to state 103
    GT       shift, and go to state 104
    GE       shift, and go to state 105
    RB       shift, and go to state 148
    UNEQUAL  shift, and go to state 107


state 94

  124 factor: ID DOT . ID

    ID  shift, and go to state 149


state 95

  123 factor: ID LB . expression RB

    ID         shift, and go to state 55
    MINUS      shift, and go to state 56
    LP         shift, and go to state 57
    INTEGER    shift, and go to state 58
    NOT        shift, and go to state 59
    SYS_CON    shift, and go to state 60
    SYS_FUNCT  shift, and go to state 61
    CHAR       shift, and go to state 62
    STRING     shift, and go to state 63
    REAL       shift, and go to state 64

    NAME         go to state 65
    const_value  go to state 66
    expression   go to state 150
    expr         go to state 68
    term         go to state 69
    factor       go to state 70


state 96

  122 factor: MINUS factor .

    $default  reduce using rule 122 (factor)


state 97

  100 expression: expression . GE expr
  101           | expression . GT expr
  102           | expression . LE expr
  103           | expression . LT expr
  104           | expression . EQUAL expr
  105           | expression . UNEQUAL expr
  120 factor: LP expression . RP

    EQUAL    shift, and go to state 101
    LT       shift, and go to state 102
    LE       shift, and go to state 103
    GT       shift, and go to state 104
    GE       shift, and go to state 105
    RP       shift, and go to state 151
    UNEQUAL  shift, and go to state 107


state 98

  121 factor: NOT factor .

    $default  reduce using rule 121 (factor)


state 99

  118 factor: SYS_FUNCT SYS_FUNCT . LP args_list RP

    LP  shift, and go to state 152


state 100

  117 factor: NAME LP . args_list RP

    ID         shift, and go to state 55
    MINUS      shift, and go to state 56
    LP         shift, and go to state 57
    INTEGER    shift, and go to state 58
    NOT        shift, and go to state 59
    SYS_CON    shift, and go to state 60
    SYS_FUNCT  shift, and go to state 61
    CHAR       shift, and go to state 62
    STRING     shift, and go to state 63
    REAL       shift, and go to state 64

    NAME         go to state 65
    const_value  go to state 66
    expression   go to state 90
    expr         go to state 68
    term         go to state 69
    factor       go to state 70
    args_list    go to state 153


state 101

  104 expression: expression EQUAL . expr

    ID         shift, and go to state 55
    MINUS      shift, and go to state 56
    LP         shift, and go to state 57
    INTEGER    shift, and go to state 58
    NOT        shift, and go to state 59
    SYS_CON    shift, and go to state 60
    SYS_FUNCT  shift, and go to state 61
    CHAR       shift, and go to state 62
    STRING     shift, and go to state 63
    REAL       shift, and go to state 64

    NAME         go to state 65
    const_value  go to state 66
    expr         go to state 154
    term         go to state 69
    factor       go to state 70


state 102

  103 expression: expression LT . expr

    ID         shift, and go to state 55
    MINUS      shift, and go to state 56
    LP         shift, and go to state 57
    INTEGER    shift, and go to state 58
    NOT        shift, and go to state 59
    SYS_CON    shift, and go to state 60
    SYS_FUNCT  shift, and go to state 61
    CHAR       shift, and go to state 62
    STRING     shift, and go to state 63
    REAL       shift, and go to state 64

    NAME         go to state 65
    const_value  go to state 66
    expr         go to state 155
    term         go to state 69
    factor       go to state 70


state 103

  102 expression: expression LE . expr

    ID         shift, and go to state 55
    MINUS      shift, and go to state 56
    LP         shift, and go to state 57
    INTEGER    shift, and go to state 58
    NOT        shift, and go to state 59
    SYS_CON    shift, and go to state 60
    SYS_FUNCT  shift, and go to state 61
    CHAR       shift, and go to state 62
    STRING     shift, and go to state 63
    REAL       shift, and go to state 64

    NAME         go to state 65
    const_value  go to state 66
    expr         go to state 156
    term         go to state 69
    factor       go to state 70


state 104

  101 expression: expression GT . expr

    ID         shift, and go to state 55
    MINUS      shift, and go to state 56
    LP         shift, and go to state 57
    INTEGER    shift, and go to state 58
    NOT        shift, and go to state 59
    SYS_CON    shift, and go to state 60
    SYS_FUNCT  shift, and go to state 61
    CHAR       shift, and go to state 62
    STRING     shift, and go to state 63
    REAL       shift, and go to state 64

    NAME         go to state 65
    const_value  go to state 66
    expr         go to state 157
    term         go to state 69
    factor       go to state 70


state 105

  100 expression: expression GE . expr

    ID         shift, and go to state 55
    MINUS      shift, and go to state 56
    LP         shift, and go to state 57
    INTEGER    shift, and go to state 58
    NOT        shift, and go to state 59
    SYS_CON    shift, and go to state 60
    SYS_FUNCT  shift, and go to state 61
    CHAR       shift, and go to state 62
    STRING     shift, and go to state 63
    REAL       shift, and go to state 64

    NAME         go to state 65
    const_value  go to state 66
    expr         go to state 158
    term         go to state 69
    factor       go to state 70


state 106

   84 if_stmt: IF expression THEN . stmt else_clause

    ID        shift, and go to state 22
    IF        shift, and go to state 23
    WHILE     shift, and go to state 24
    BEGINN    shift, and go to state 11
    CASE      shift, and go to state 26
    FOR       shift, and go to state 27
    GOTO      shift, and go to state 28
    INTEGER   shift, and go to state 29
    READ      shift, and go to state 30
    REPEAT    shift, and go to state 31
    SYS_PROC  shift, and go to state 32

    compound_stmt   go to state 33
    stmt            go to state 159
    non_label_stmt  go to state 35
    assign_stmt     go to state 36
    proc_stmt       go to state 37
    if_stmt         go to state 38
    repeat_stmt     go to state 39
    while_stmt      go to state 40
    for_stmt        go to state 41
    case_stmt       go to state 42
    goto_stmt       go to state 43


state 107

  105 expression: expression UNEQUAL . expr

    ID         shift, and go to state 55
    MINUS      shift, and go to state 56
    LP         shift, and go to state 57
    INTEGER    shift, and go to state 58
    NOT        shift, and go to state 59
    SYS_CON    shift, and go to state 60
    SYS_FUNCT  shift, and go to state 61
    CHAR       shift, and go to state 62
    STRING     shift, and go to state 63
    REAL       shift, and go to state 64

    NAME         go to state 65
    const_value  go to state 66
    expr         go to state 160
    term         go to state 69
    factor       go to state 70


state 108

  107 expr: expr PLUS . term

    ID         shift, and go to state 55
    MINUS      shift, and go to state 56
    LP         shift, and go to state 57
    INTEGER    shift, and go to state 58
    NOT        shift, and go to state 59
    SYS_CON    shift, and go to state 60
    SYS_FUNCT  shift, and go to state 61
    CHAR       shift, and go to state 62
    STRING     shift, and go to state 63
    REAL       shift, and go to state 64

    NAME         go to state 65
    const_value  go to state 66
    term         go to state 161
    factor       go to state 70


state 109

  108 expr: expr MINUS . term

    ID         shift, and go to state 55
    MINUS      shift, and go to state 56
    LP         shift, and go to state 57
    INTEGER    shift, and go to state 58
    NOT        shift, and go to state 59
    SYS_CON    shift, and go to state 60
    SYS_FUNCT  shift, and go to state 61
    CHAR       shift, and go to state 62
    STRING     shift, and go to state 63
    REAL       shift, and go to state 64

    NAME         go to state 65
    const_value  go to state 66
    term         go to state 162
    factor       go to state 70


state 110

  109 expr: expr OR . term

    ID         shift, and go to state 55
    MINUS      shift, and go to state 56
    LP         shift, and go to state 57
    INTEGER    shift, and go to state 58
    NOT        shift, and go to state 59
    SYS_CON    shift, and go to state 60
    SYS_FUNCT  shift, and go to state 61
    CHAR       shift, and go to state 62
    STRING     shift, and go to state 63
    REAL       shift, and go to state 64

    NAME         go to state 65
    const_value  go to state 66
    term         go to state 163
    factor       go to state 70


state 111

  111 term: term MUL . factor

    ID         shift, and go to state 55
    MINUS      shift, and go to state 56
    LP         shift, and go to state 57
    INTEGER    shift, and go to state 58
    NOT        shift, and go to state 59
    SYS_CON    shift, and go to state 60
    SYS_FUNCT  shift, and go to state 61
    CHAR       shift, and go to state 62
    STRING     shift, and go to state 63
    REAL       shift, and go to state 64

    NAME         go to state 65
    const_value  go to state 66
    factor       go to state 164


state 112

  112 term: term DIV . factor

    ID         shift, and go to state 55
    MINUS      shift, and go to state 56
    LP         shift, and go to state 57
    INTEGER    shift, and go to state 58
    NOT        shift, and go to state 59
    SYS_CON    shift, and go to state 60
    SYS_FUNCT  shift, and go to state 61
    CHAR       shift, and go to state 62
    STRING     shift, and go to state 63
    REAL       shift, and go to state 64

    NAME         go to state 65
    const_value  go to state 66
    factor       go to state 165


state 113

  114 term: term AND . factor

    ID         shift, and go to state 55
    MINUS      shift, and go to state 56
    LP         shift, and go to state 57
    INTEGER    shift, and go to state 58
    NOT        shift, and go to state 59
    SYS_CON    shift, and go to state 60
    SYS_FUNCT  shift, and go to state 61
    CHAR       shift, and go to state 62
    STRING     shift, and go to state 63
    REAL       shift, and go to state 64

    NAME         go to state 65
    const_value  go to state 66
    factor       go to state 166


state 114

  113 term: term MOD . factor

    ID         shift, and go to state 55
    MINUS      shift, and go to state 56
    LP         shift, and go to state 57
    INTEGER    shift, and go to state 58
    NOT        shift, and go to state 59
    SYS_CON    shift, and go to state 60
    SYS_FUNCT  shift, and go to state 61
    CHAR       shift, and go to state 62
    STRING     shift, and go to state 63
    REAL       shift, and go to state 64

    NAME         go to state 65
    const_value  go to state 66
    factor       go to state 167


state 115

   88 while_stmt: WHILE expression DO . stmt

    ID        shift, and go to state 22
    IF        shift, and go to state 23
    WHILE     shift, and go to state 24
    BEGINN    shift, and go to state 11
    CASE      shift, and go to state 26
    FOR       shift, and go to state 27
    GOTO      shift, and go to state 28
    INTEGER   shift, and go to state 29
    READ      shift, and go to state 30
    REPEAT    shift, and go to state 31
    SYS_PROC  shift, and go to state 32

    compound_stmt   go to state 33
    stmt            go to state 168
    non_label_stmt  go to state 35
    assign_stmt     go to state 36
    proc_stmt       go to state 37
    if_stmt         go to state 38
    repeat_stmt     go to state 39
    while_stmt      go to state 40
    for_stmt        go to state 41
    case_stmt       go to state 42
    goto_stmt       go to state 43


state 116

   92 case_stmt: CASE expression OF . case_expr_list END

    ID       shift, and go to state 169
    INTEGER  shift, and go to state 58
    SYS_CON  shift, and go to state 60
    CHAR     shift, and go to state 62
    STRING   shift, and go to state 63
    REAL     shift, and go to state 64

    const_value     go to state 170
    case_expr_list  go to state 171
    case_expr       go to state 172


state 117

   89 for_stmt: FOR ID ASSIGN . expression direction expression DO stmt

    ID         shift, and go to state 55
    MINUS      shift, and go to state 56
    LP         shift, and go to state 57
    INTEGER    shift, and go to state 58
    NOT        shift, and go to state 59
    SYS_CON    shift, and go to state 60
    SYS_FUNCT  shift, and go to state 61
    CHAR       shift, and go to state 62
    STRING     shift, and go to state 63
    REAL       shift, and go to state 64

    NAME         go to state 65
    const_value  go to state 66
    expression   go to state 173
    expr         go to state 68
    term         go to state 69
    factor       go to state 70


state 118

   65 stmt: INTEGER COLON non_label_stmt .

    $default  reduce using rule 65 (stmt)


state 119

   83 proc_stmt: READ LP factor . RP

    RP  shift, and go to state 174


state 120

   87 repeat_stmt: REPEAT stmt_list UNTIL . expression

    ID         shift, and go to state 55
    MINUS      shift, and go to state 56
    LP         shift, and go to state 57
    INTEGER    shift, and go to state 58
    NOT        shift, and go to state 59
    SYS_CON    shift, and go to state 60
    SYS_FUNCT  shift, and go to state 61
    CHAR       shift, and go to state 62
    STRING     shift, and go to state 63
    REAL       shift, and go to state 64

    NAME         go to state 65
    const_value  go to state 66
    expression   go to state 175
    expr         go to state 68
    term         go to state 69
    factor       go to state 70


state 121

   82 proc_stmt: SYS_PROC LP expression_list . RP
   98 expression_list: expression_list . COMMA expression

    RP     shift, and go to state 176
    COMMA  shift, and go to state 177


state 122

   99 expression_list: expression .
  100 expression: expression . GE expr
  101           | expression . GT expr
  102           | expression . LE expr
  103           | expression . LT expr
  104           | expression . EQUAL expr
  105           | expression . UNEQUAL expr

    EQUAL    shift, and go to state 101
    LT       shift, and go to state 102
    LE       shift, and go to state 103
    GT       shift, and go to state 104
    GE       shift, and go to state 105
    UNEQUAL  shift, and go to state 107

    $default  reduce using rule 99 (expression_list)


state 123

   12 const_expr_list: NAME EQUAL const_value SEMI .

    $default  reduce using rule 12 (const_expr_list)


state 124

   11 const_expr_list: const_expr_list NAME EQUAL const_value . SEMI

    SEMI  shift, and go to state 178


state 125

   30 simple_type_decl: MINUS . const_value DOT DOT const_value
   31                 | MINUS . const_value DOT DOT MINUS const_value

    INTEGER  shift, and go to state 58
    SYS_CON  shift, and go to state 60
    CHAR     shift, and go to state 62
    STRING   shift, and go to state 63
    REAL     shift, and go to state 64

    const_value  go to state 179


state 126

   28 simple_type_decl: LP . name_list RP

    ID  shift, and go to state 84

    name_list  go to state 180


state 127

   26 simple_type_decl: SYS_TYPE .

    $default  reduce using rule 26 (simple_type_decl)


state 128

   33 array_type_decl: ARRAY . LB simple_type_decl RB OF type_decl

    LB  shift, and go to state 181


state 129

   34 record_type_decl: RECORD . field_decl_list END

    ID  shift, and go to state 84

    field_decl_list  go to state 182
    field_decl       go to state 183
    name_list        go to state 184


state 130

   27 simple_type_decl: NAME .
   32                 | NAME . DOT DOT NAME

    DOT  shift, and go to state 185

    $default  reduce using rule 27 (simple_type_decl)


state 131

   29 simple_type_decl: const_value . DOT DOT const_value

    DOT  shift, and go to state 186


state 132

   22 type_definition: ID EQUAL type_decl . SEMI

    SEMI  shift, and go to state 187


state 133

   23 type_decl: simple_type_decl .

    $default  reduce using rule 23 (type_decl)


state 134

   24 type_decl: array_type_decl .

    $default  reduce using rule 24 (type_decl)


state 135

   25 type_decl: record_type_decl .

    $default  reduce using rule 25 (type_decl)


state 136

   44 var_decl: name_list COLON . type_decl SEMI

    ID        shift, and go to state 17
    MINUS     shift, and go to state 125
    LP        shift, and go to state 126
    INTEGER   shift, and go to state 58
    SYS_CON   shift, and go to state 60
    SYS_TYPE  shift, and go to state 127
    CHAR      shift, and go to state 62
    STRING    shift, and go to state 63
    REAL      shift, and go to state 64
    ARRAY     shift, and go to state 128
    RECORD    shift, and go to state 129

    NAME              go to state 130
    const_value       go to state 131
    type_decl         go to state 188
    simple_type_decl  go to state 133
    array_type_decl   go to state 134
    record_type_decl  go to state 135


state 137

   38 name_list: name_list COMMA . ID

    ID  shift, and go to state 189


state 138

   42 var_decl_list: var_decl_list var_decl .

    $default  reduce using rule 42 (var_decl_list)


state 139

   51 procedure_head: PROCEDURE . ID parameters

    ID  shift, and go to state 190


state 140

   49 function_head: FUNCTION . ID parameters COLON simple_type_decl

    ID  shift, and go to state 191


state 141

   45 routine_part: routine_part function_decl .

    $default  reduce using rule 45 (routine_part)


state 142

   48 function_decl: function_head . SEMI sub_routine SEMI

    SEMI  shift, and go to state 192


state 143

   46 routine_part: routine_part procedure_decl .

    $default  reduce using rule 46 (routine_part)


state 144

   50 procedure_decl: procedure_head . SEMI sub_routine SEMI

    SEMI  shift, and go to state 193


state 145

   78 assign_stmt: ID DOT ID ASSIGN . expression

    ID         shift, and go to state 55
    MINUS      shift, and go to state 56
    LP         shift, and go to state 57
    INTEGER    shift, and go to state 58
    NOT        shift, and go to state 59
    SYS_CON    shift, and go to state 60
    SYS_FUNCT  shift, and go to state 61
    CHAR       shift, and go to state 62
    STRING     shift, and go to state 63
    REAL       shift, and go to state 64

    NAME         go to state 65
    const_value  go to state 66
    expression   go to state 194
    expr         go to state 68
    term         go to state 69
    factor       go to state 70


state 146

   80 proc_stmt: ID LP args_list RP .

    $default  reduce using rule 80 (proc_stmt)


state 147

  125 args_list: args_list COMMA . expression

    ID         shift, and go to state 55
    MINUS      shift, and go to state 56
    LP         shift, and go to state 57
    INTEGER    shift, and go to state 58
    NOT        shift, and go to state 59
    SYS_CON    shift, and go to state 60
    SYS_FUNCT  shift, and go to state 61
    CHAR       shift, and go to state 62
    STRING     shift, and go to state 63
    REAL       shift, and go to state 64

    NAME         go to state 65
    const_value  go to state 66
    expression   go to state 195
    expr         go to state 68
    term         go to state 69
    factor       go to state 70


state 148

   77 assign_stmt: ID LB expression RB . ASSIGN expression

    ASSIGN  shift, and go to state 196


state 149

  124 factor: ID DOT ID .

    $default  reduce using rule 124 (factor)


state 150

  100 expression: expression . GE expr
  101           | expression . GT expr
  102           | expression . LE expr
  103           | expression . LT expr
  104           | expression . EQUAL expr
  105           | expression . UNEQUAL expr
  123 factor: ID LB expression . RB

    EQUAL    shift, and go to state 101
    LT       shift, and go to state 102
    LE       shift, and go to state 103
    GT       shift, and go to state 104
    GE       shift, and go to state 105
    RB       shift, and go to state 197
    UNEQUAL  shift, and go to state 107


state 151

  120 factor: LP expression RP .

    $default  reduce using rule 120 (factor)


state 152

  118 factor: SYS_FUNCT SYS_FUNCT LP . args_list RP

    ID         shift, and go to state 55
    MINUS      shift, and go to state 56
    LP         shift, and go to state 57
    INTEGER    shift, and go to state 58
    NOT        shift, and go to state 59
    SYS_CON    shift, and go to state 60
    SYS_FUNCT  shift, and go to state 61
    CHAR       shift, and go to state 62
    STRING     shift, and go to state 63
    REAL       shift, and go to state 64

    NAME         go to state 65
    const_value  go to state 66
    expression   go to state 90
    expr         go to state 68
    term         go to state 69
    factor       go to state 70
    args_list    go to state 198


state 153

  117 factor: NAME LP args_list . RP
  125 args_list: args_list . COMMA expression

    RP     shift, and go to state 199
    COMMA  shift, and go to state 147


state 154

  104 expression: expression EQUAL expr .
  107 expr: expr . PLUS term
  108     | expr . MINUS term
  109     | expr . OR term

    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    OR     shift, and go to state 110

    $default  reduce using rule 104 (expression)


state 155

  103 expression: expression LT expr .
  107 expr: expr . PLUS term
  108     | expr . MINUS term
  109     | expr . OR term

    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    OR     shift, and go to state 110

    $default  reduce using rule 103 (expression)


state 156

  102 expression: expression LE expr .
  107 expr: expr . PLUS term
  108     | expr . MINUS term
  109     | expr . OR term

    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    OR     shift, and go to state 110

    $default  reduce using rule 102 (expression)


state 157

  101 expression: expression GT expr .
  107 expr: expr . PLUS term
  108     | expr . MINUS term
  109     | expr . OR term

    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    OR     shift, and go to state 110

    $default  reduce using rule 101 (expression)


state 158

  100 expression: expression GE expr .
  107 expr: expr . PLUS term
  108     | expr . MINUS term
  109     | expr . OR term

    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    OR     shift, and go to state 110

    $default  reduce using rule 100 (expression)


state 159

   84 if_stmt: IF expression THEN stmt . else_clause

    ELSE  shift, and go to state 200

    ELSE      [reduce using rule 86 (else_clause)]
    $default  reduce using rule 86 (else_clause)

    else_clause  go to state 201


state 160

  105 expression: expression UNEQUAL expr .
  107 expr: expr . PLUS term
  108     | expr . MINUS term
  109     | expr . OR term

    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    OR     shift, and go to state 110

    $default  reduce using rule 105 (expression)


state 161

  107 expr: expr PLUS term .
  111 term: term . MUL factor
  112     | term . DIV factor
  113     | term . MOD factor
  114     | term . AND factor

    MUL  shift, and go to state 111
    DIV  shift, and go to state 112
    AND  shift, and go to state 113
    MOD  shift, and go to state 114

    $default  reduce using rule 107 (expr)


state 162

  108 expr: expr MINUS term .
  111 term: term . MUL factor
  112     | term . DIV factor
  113     | term . MOD factor
  114     | term . AND factor

    MUL  shift, and go to state 111
    DIV  shift, and go to state 112
    AND  shift, and go to state 113
    MOD  shift, and go to state 114

    $default  reduce using rule 108 (expr)


state 163

  109 expr: expr OR term .
  111 term: term . MUL factor
  112     | term . DIV factor
  113     | term . MOD factor
  114     | term . AND factor

    MUL  shift, and go to state 111
    DIV  shift, and go to state 112
    AND  shift, and go to state 113
    MOD  shift, and go to state 114

    $default  reduce using rule 109 (expr)


state 164

  111 term: term MUL factor .

    $default  reduce using rule 111 (term)


state 165

  112 term: term DIV factor .

    $default  reduce using rule 112 (term)


state 166

  114 term: term AND factor .

    $default  reduce using rule 114 (term)


state 167

  113 term: term MOD factor .

    $default  reduce using rule 113 (term)


state 168

   88 while_stmt: WHILE expression DO stmt .

    $default  reduce using rule 88 (while_stmt)


state 169

   96 case_expr: ID . COLON stmt SEMI

    COLON  shift, and go to state 202


state 170

   95 case_expr: const_value . COLON stmt SEMI

    COLON  shift, and go to state 203


state 171

   92 case_stmt: CASE expression OF case_expr_list . END
   93 case_expr_list: case_expr_list . case_expr

    ID       shift, and go to state 169
    END      shift, and go to state 204
    INTEGER  shift, and go to state 58
    SYS_CON  shift, and go to state 60
    CHAR     shift, and go to state 62
    STRING   shift, and go to state 63
    REAL     shift, and go to state 64

    const_value  go to state 170
    case_expr    go to state 205


state 172

   94 case_expr_list: case_expr .

    $default  reduce using rule 94 (case_expr_list)


state 173

   89 for_stmt: FOR ID ASSIGN expression . direction expression DO stmt
  100 expression: expression . GE expr
  101           | expression . GT expr
  102           | expression . LE expr
  103           | expression . LT expr
  104           | expression . EQUAL expr
  105           | expression . UNEQUAL expr

    EQUAL    shift, and go to state 101
    LT       shift, and go to state 102
    LE       shift, and go to state 103
    GT       shift, and go to state 104
    GE       shift, and go to state 105
    DOWNTO   shift, and go to state 206
    TO       shift, and go to state 207
    UNEQUAL  shift, and go to state 107

    direction  go to state 208


state 174

   83 proc_stmt: READ LP factor RP .

    $default  reduce using rule 83 (proc_stmt)


state 175

   87 repeat_stmt: REPEAT stmt_list UNTIL expression .
  100 expression: expression . GE expr
  101           | expression . GT expr
  102           | expression . LE expr
  103           | expression . LT expr
  104           | expression . EQUAL expr
  105           | expression . UNEQUAL expr

    EQUAL    shift, and go to state 101
    LT       shift, and go to state 102
    LE       shift, and go to state 103
    GT       shift, and go to state 104
    GE       shift, and go to state 105
    UNEQUAL  shift, and go to state 107

    $default  reduce using rule 87 (repeat_stmt)


state 176

   82 proc_stmt: SYS_PROC LP expression_list RP .

    $default  reduce using rule 82 (proc_stmt)


state 177

   98 expression_list: expression_list COMMA . expression

    ID         shift, and go to state 55
    MINUS      shift, and go to state 56
    LP         shift, and go to state 57
    INTEGER    shift, and go to state 58
    NOT        shift, and go to state 59
    SYS_CON    shift, and go to state 60
    SYS_FUNCT  shift, and go to state 61
    CHAR       shift, and go to state 62
    STRING     shift, and go to state 63
    REAL       shift, and go to state 64

    NAME         go to state 65
    const_value  go to state 66
    expression   go to state 209
    expr         go to state 68
    term         go to state 69
    factor       go to state 70


state 178

   11 const_expr_list: const_expr_list NAME EQUAL const_value SEMI .

    $default  reduce using rule 11 (const_expr_list)


state 179

   30 simple_type_decl: MINUS const_value . DOT DOT const_value
   31                 | MINUS const_value . DOT DOT MINUS const_value

    DOT  shift, and go to state 210


state 180

   28 simple_type_decl: LP name_list . RP
   38 name_list: name_list . COMMA ID

    RP     shift, and go to state 211
    COMMA  shift, and go to state 137


state 181

   33 array_type_decl: ARRAY LB . simple_type_decl RB OF type_decl

    ID        shift, and go to state 17
    MINUS     shift, and go to state 125
    LP        shift, and go to state 126
    INTEGER   shift, and go to state 58
    SYS_CON   shift, and go to state 60
    SYS_TYPE  shift, and go to state 127
    CHAR      shift, and go to state 62
    STRING    shift, and go to state 63
    REAL      shift, and go to state 64

    NAME              go to state 130
    const_value       go to state 131
    simple_type_decl  go to state 212


state 182

   34 record_type_decl: RECORD field_decl_list . END
   35 field_decl_list: field_decl_list . field_decl

    ID   shift, and go to state 84
    END  shift, and go to state 213

    field_decl  go to state 214
    name_list   go to state 184


state 183

   36 field_decl_list: field_decl .

    $default  reduce using rule 36 (field_decl_list)


state 184

   37 field_decl: name_list . COLON type_decl SEMI
   38 name_list: name_list . COMMA ID

    COLON  shift, and go to state 215
    COMMA  shift, and go to state 137


state 185

   32 simple_type_decl: NAME DOT . DOT NAME

    DOT  shift, and go to state 216


state 186

   29 simple_type_decl: const_value DOT . DOT const_value

    DOT  shift, and go to state 217


state 187

   22 type_definition: ID EQUAL type_decl SEMI .

    $default  reduce using rule 22 (type_definition)


state 188

   44 var_decl: name_list COLON type_decl . SEMI

    SEMI  shift, and go to state 218


state 189

   38 name_list: name_list COMMA ID .

    $default  reduce using rule 38 (name_list)


state 190

   51 procedure_head: PROCEDURE ID . parameters

    LP  shift, and go to state 219

    $default  reduce using rule 53 (parameters)

    parameters  go to state 220


state 191

   49 function_head: FUNCTION ID . parameters COLON simple_type_decl

    LP  shift, and go to state 219

    $default  reduce using rule 53 (parameters)

    parameters  go to state 221


state 192

   48 function_decl: function_head SEMI . sub_routine SEMI

    $default  reduce using rule 8 (label_part)

    sub_routine   go to state 222
    routine_head  go to state 223
    label_part    go to state 8


state 193

   50 procedure_decl: procedure_head SEMI . sub_routine SEMI

    $default  reduce using rule 8 (label_part)

    sub_routine   go to state 224
    routine_head  go to state 223
    label_part    go to state 8


state 194

   78 assign_stmt: ID DOT ID ASSIGN expression .
  100 expression: expression . GE expr
  101           | expression . GT expr
  102           | expression . LE expr
  103           | expression . LT expr
  104           | expression . EQUAL expr
  105           | expression . UNEQUAL expr

    EQUAL    shift, and go to state 101
    LT       shift, and go to state 102
    LE       shift, and go to state 103
    GT       shift, and go to state 104
    GE       shift, and go to state 105
    UNEQUAL  shift, and go to state 107

    $default  reduce using rule 78 (assign_stmt)


state 195

  100 expression: expression . GE expr
  101           | expression . GT expr
  102           | expression . LE expr
  103           | expression . LT expr
  104           | expression . EQUAL expr
  105           | expression . UNEQUAL expr
  125 args_list: args_list COMMA expression .

    EQUAL    shift, and go to state 101
    LT       shift, and go to state 102
    LE       shift, and go to state 103
    GT       shift, and go to state 104
    GE       shift, and go to state 105
    UNEQUAL  shift, and go to state 107

    $default  reduce using rule 125 (args_list)


state 196

   77 assign_stmt: ID LB expression RB ASSIGN . expression

    ID         shift, and go to state 55
    MINUS      shift, and go to state 56
    LP         shift, and go to state 57
    INTEGER    shift, and go to state 58
    NOT        shift, and go to state 59
    SYS_CON    shift, and go to state 60
    SYS_FUNCT  shift, and go to state 61
    CHAR       shift, and go to state 62
    STRING     shift, and go to state 63
    REAL       shift, and go to state 64

    NAME         go to state 65
    const_value  go to state 66
    expression   go to state 225
    expr         go to state 68
    term         go to state 69
    factor       go to state 70


state 197

  123 factor: ID LB expression RB .

    $default  reduce using rule 123 (factor)


state 198

  118 factor: SYS_FUNCT SYS_FUNCT LP args_list . RP
  125 args_list: args_list . COMMA expression

    RP     shift, and go to state 226
    COMMA  shift, and go to state 147


state 199

  117 factor: NAME LP args_list RP .

    $default  reduce using rule 117 (factor)


state 200

   85 else_clause: ELSE . stmt

    ID        shift, and go to state 22
    IF        shift, and go to state 23
    WHILE     shift, and go to state 24
    BEGINN    shift, and go to state 11
    CASE      shift, and go to state 26
    FOR       shift, and go to state 27
    GOTO      shift, and go to state 28
    INTEGER   shift, and go to state 29
    READ      shift, and go to state 30
    REPEAT    shift, and go to state 31
    SYS_PROC  shift, and go to state 32

    compound_stmt   go to state 33
    stmt            go to state 227
    non_label_stmt  go to state 35
    assign_stmt     go to state 36
    proc_stmt       go to state 37
    if_stmt         go to state 38
    repeat_stmt     go to state 39
    while_stmt      go to state 40
    for_stmt        go to state 41
    case_stmt       go to state 42
    goto_stmt       go to state 43


state 201

   84 if_stmt: IF expression THEN stmt else_clause .

    $default  reduce using rule 84 (if_stmt)


state 202

   96 case_expr: ID COLON . stmt SEMI

    ID        shift, and go to state 22
    IF        shift, and go to state 23
    WHILE     shift, and go to state 24
    BEGINN    shift, and go to state 11
    CASE      shift, and go to state 26
    FOR       shift, and go to state 27
    GOTO      shift, and go to state 28
    INTEGER   shift, and go to state 29
    READ      shift, and go to state 30
    REPEAT    shift, and go to state 31
    SYS_PROC  shift, and go to state 32

    compound_stmt   go to state 33
    stmt            go to state 228
    non_label_stmt  go to state 35
    assign_stmt     go to state 36
    proc_stmt       go to state 37
    if_stmt         go to state 38
    repeat_stmt     go to state 39
    while_stmt      go to state 40
    for_stmt        go to state 41
    case_stmt       go to state 42
    goto_stmt       go to state 43


state 203

   95 case_expr: const_value COLON . stmt SEMI

    ID        shift, and go to state 22
    IF        shift, and go to state 23
    WHILE     shift, and go to state 24
    BEGINN    shift, and go to state 11
    CASE      shift, and go to state 26
    FOR       shift, and go to state 27
    GOTO      shift, and go to state 28
    INTEGER   shift, and go to state 29
    READ      shift, and go to state 30
    REPEAT    shift, and go to state 31
    SYS_PROC  shift, and go to state 32

    compound_stmt   go to state 33
    stmt            go to state 229
    non_label_stmt  go to state 35
    assign_stmt     go to state 36
    proc_stmt       go to state 37
    if_stmt         go to state 38
    repeat_stmt     go to state 39
    while_stmt      go to state 40
    for_stmt        go to state 41
    case_stmt       go to state 42
    goto_stmt       go to state 43


state 204

   92 case_stmt: CASE expression OF case_expr_list END .

    $default  reduce using rule 92 (case_stmt)


state 205

   93 case_expr_list: case_expr_list case_expr .

    $default  reduce using rule 93 (case_expr_list)


state 206

   91 direction: DOWNTO .

    $default  reduce using rule 91 (direction)


state 207

   90 direction: TO .

    $default  reduce using rule 90 (direction)


state 208

   89 for_stmt: FOR ID ASSIGN expression direction . expression DO stmt

    ID         shift, and go to state 55
    MINUS      shift, and go to state 56
    LP         shift, and go to state 57
    INTEGER    shift, and go to state 58
    NOT        shift, and go to state 59
    SYS_CON    shift, and go to state 60
    SYS_FUNCT  shift, and go to state 61
    CHAR       shift, and go to state 62
    STRING     shift, and go to state 63
    REAL       shift, and go to state 64

    NAME         go to state 65
    const_value  go to state 66
    expression   go to state 230
    expr         go to state 68
    term         go to state 69
    factor       go to state 70


state 209

   98 expression_list: expression_list COMMA expression .
  100 expression: expression . GE expr
  101           | expression . GT expr
  102           | expression . LE expr
  103           | expression . LT expr
  104           | expression . EQUAL expr
  105           | expression . UNEQUAL expr

    EQUAL    shift, and go to state 101
    LT       shift, and go to state 102
    LE       shift, and go to state 103
    GT       shift, and go to state 104
    GE       shift, and go to state 105
    UNEQUAL  shift, and go to state 107

    $default  reduce using rule 98 (expression_list)


state 210

   30 simple_type_decl: MINUS const_value DOT . DOT const_value
   31                 | MINUS const_value DOT . DOT MINUS const_value

    DOT  shift, and go to state 231


state 211

   28 simple_type_decl: LP name_list RP .

    $default  reduce using rule 28 (simple_type_decl)


state 212

   33 array_type_decl: ARRAY LB simple_type_decl . RB OF type_decl

    RB  shift, and go to state 232


state 213

   34 record_type_decl: RECORD field_decl_list END .

    $default  reduce using rule 34 (record_type_decl)


state 214

   35 field_decl_list: field_decl_list field_decl .

    $default  reduce using rule 35 (field_decl_list)


state 215

   37 field_decl: name_list COLON . type_decl SEMI

    ID        shift, and go to state 17
    MINUS     shift, and go to state 125
    LP        shift, and go to state 126
    INTEGER   shift, and go to state 58
    SYS_CON   shift, and go to state 60
    SYS_TYPE  shift, and go to state 127
    CHAR      shift, and go to state 62
    STRING    shift, and go to state 63
    REAL      shift, and go to state 64
    ARRAY     shift, and go to state 128
    RECORD    shift, and go to state 129

    NAME              go to state 130
    const_value       go to state 131
    type_decl         go to state 233
    simple_type_decl  go to state 133
    array_type_decl   go to state 134
    record_type_decl  go to state 135


state 216

   32 simple_type_decl: NAME DOT DOT . NAME

    ID  shift, and go to state 17

    NAME  go to state 234


state 217

   29 simple_type_decl: const_value DOT DOT . const_value

    INTEGER  shift, and go to state 58
    SYS_CON  shift, and go to state 60
    CHAR     shift, and go to state 62
    STRING   shift, and go to state 63
    REAL     shift, and go to state 64

    const_value  go to state 235


state 218

   44 var_decl: name_list COLON type_decl SEMI .

    $default  reduce using rule 44 (var_decl)


state 219

   52 parameters: LP . para_decl_list RP

    ID   shift, and go to state 84
    VAR  shift, and go to state 236

    name_list       go to state 237
    para_decl_list  go to state 238
    para_type_list  go to state 239
    var_para_list   go to state 240
    val_para_list   go to state 241


state 220

   51 procedure_head: PROCEDURE ID parameters .

    $default  reduce using rule 51 (procedure_head)


state 221

   49 function_head: FUNCTION ID parameters . COLON simple_type_decl

    COLON  shift, and go to state 242


state 222

   48 function_decl: function_head SEMI sub_routine . SEMI

    SEMI  shift, and go to state 243


state 223

    6 sub_routine: routine_head . routine_body

    BEGINN  shift, and go to state 11

    routine_body   go to state 244
    compound_stmt  go to state 13


state 224

   50 procedure_decl: procedure_head SEMI sub_routine . SEMI

    SEMI  shift, and go to state 245


state 225

   77 assign_stmt: ID LB expression RB ASSIGN expression .
  100 expression: expression . GE expr
  101           | expression . GT expr
  102           | expression . LE expr
  103           | expression . LT expr
  104           | expression . EQUAL expr
  105           | expression . UNEQUAL expr

    EQUAL    shift, and go to state 101
    LT       shift, and go to state 102
    LE       shift, and go to state 103
    GT       shift, and go to state 104
    GE       shift, and go to state 105
    UNEQUAL  shift, and go to state 107

    $default  reduce using rule 77 (assign_stmt)


state 226

  118 factor: SYS_FUNCT SYS_FUNCT LP args_list RP .

    $default  reduce using rule 118 (factor)


state 227

   85 else_clause: ELSE stmt .

    $default  reduce using rule 85 (else_clause)


state 228

   96 case_expr: ID COLON stmt . SEMI

    SEMI  shift, and go to state 246


state 229

   95 case_expr: const_value COLON stmt . SEMI

    SEMI  shift, and go to state 247


state 230

   89 for_stmt: FOR ID ASSIGN expression direction expression . DO stmt
  100 expression: expression . GE expr
  101           | expression . GT expr
  102           | expression . LE expr
  103           | expression . LT expr
  104           | expression . EQUAL expr
  105           | expression . UNEQUAL expr

    EQUAL    shift, and go to state 101
    LT       shift, and go to state 102
    LE       shift, and go to state 103
    GT       shift, and go to state 104
    GE       shift, and go to state 105
    DO       shift, and go to state 248
    UNEQUAL  shift, and go to state 107


state 231

   30 simple_type_decl: MINUS const_value DOT DOT . const_value
   31                 | MINUS const_value DOT DOT . MINUS const_value

    MINUS    shift, and go to state 249
    INTEGER  shift, and go to state 58
    SYS_CON  shift, and go to state 60
    CHAR     shift, and go to state 62
    STRING   shift, and go to state 63
    REAL     shift, and go to state 64

    const_value  go to state 250


state 232

   33 array_type_decl: ARRAY LB simple_type_decl RB . OF type_decl

    OF  shift, and go to state 251


state 233

   37 field_decl: name_list COLON type_decl . SEMI

    SEMI  shift, and go to state 252


state 234

   32 simple_type_decl: NAME DOT DOT NAME .

    $default  reduce using rule 32 (simple_type_decl)


state 235

   29 simple_type_decl: const_value DOT DOT const_value .

    $default  reduce using rule 29 (simple_type_decl)


state 236

   58 var_para_list: VAR . name_list

    ID  shift, and go to state 84

    name_list  go to state 253


state 237

   38 name_list: name_list . COMMA ID
   59 val_para_list: name_list .

    COMMA  shift, and go to state 137

    $default  reduce using rule 59 (val_para_list)


state 238

   52 parameters: LP para_decl_list . RP
   54 para_decl_list: para_decl_list . SEMI para_type_list

    RP    shift, and go to state 254
    SEMI  shift, and go to state 255


state 239

   55 para_decl_list: para_type_list .

    $default  reduce using rule 55 (para_decl_list)


state 240

   56 para_type_list: var_para_list . COLON simple_type_decl

    COLON  shift, and go to state 256


state 241

   57 para_type_list: val_para_list . COLON simple_type_decl

    COLON  shift, and go to state 257


state 242

   49 function_head: FUNCTION ID parameters COLON . simple_type_decl

    ID        shift, and go to state 17
    MINUS     shift, and go to state 125
    LP        shift, and go to state 126
    INTEGER   shift, and go to state 58
    SYS_CON   shift, and go to state 60
    SYS_TYPE  shift, and go to state 127
    CHAR      shift, and go to state 62
    STRING    shift, and go to state 63
    REAL      shift, and go to state 64

    NAME              go to state 130
    const_value       go to state 131
    simple_type_decl  go to state 258


state 243

   48 function_decl: function_head SEMI sub_routine SEMI .

    $default  reduce using rule 48 (function_decl)


state 244

    6 sub_routine: routine_head routine_body .

    $default  reduce using rule 6 (sub_routine)


state 245

   50 procedure_decl: procedure_head SEMI sub_routine SEMI .

    $default  reduce using rule 50 (procedure_decl)


state 246

   96 case_expr: ID COLON stmt SEMI .

    $default  reduce using rule 96 (case_expr)


state 247

   95 case_expr: const_value COLON stmt SEMI .

    $default  reduce using rule 95 (case_expr)


state 248

   89 for_stmt: FOR ID ASSIGN expression direction expression DO . stmt

    ID        shift, and go to state 22
    IF        shift, and go to state 23
    WHILE     shift, and go to state 24
    BEGINN    shift, and go to state 11
    CASE      shift, and go to state 26
    FOR       shift, and go to state 27
    GOTO      shift, and go to state 28
    INTEGER   shift, and go to state 29
    READ      shift, and go to state 30
    REPEAT    shift, and go to state 31
    SYS_PROC  shift, and go to state 32

    compound_stmt   go to state 33
    stmt            go to state 259
    non_label_stmt  go to state 35
    assign_stmt     go to state 36
    proc_stmt       go to state 37
    if_stmt         go to state 38
    repeat_stmt     go to state 39
    while_stmt      go to state 40
    for_stmt        go to state 41
    case_stmt       go to state 42
    goto_stmt       go to state 43


state 249

   31 simple_type_decl: MINUS const_value DOT DOT MINUS . const_value

    INTEGER  shift, and go to state 58
    SYS_CON  shift, and go to state 60
    CHAR     shift, and go to state 62
    STRING   shift, and go to state 63
    REAL     shift, and go to state 64

    const_value  go to state 260


state 250

   30 simple_type_decl: MINUS const_value DOT DOT const_value .

    $default  reduce using rule 30 (simple_type_decl)


state 251

   33 array_type_decl: ARRAY LB simple_type_decl RB OF . type_decl

    ID        shift, and go to state 17
    MINUS     shift, and go to state 125
    LP        shift, and go to state 126
    INTEGER   shift, and go to state 58
    SYS_CON   shift, and go to state 60
    SYS_TYPE  shift, and go to state 127
    CHAR      shift, and go to state 62
    STRING    shift, and go to state 63
    REAL      shift, and go to state 64
    ARRAY     shift, and go to state 128
    RECORD    shift, and go to state 129

    NAME              go to state 130
    const_value       go to state 131
    type_decl         go to state 261
    simple_type_decl  go to state 133
    array_type_decl   go to state 134
    record_type_decl  go to state 135


state 252

   37 field_decl: name_list COLON type_decl SEMI .

    $default  reduce using rule 37 (field_decl)


state 253

   38 name_list: name_list . COMMA ID
   58 var_para_list: VAR name_list .

    COMMA  shift, and go to state 137

    $default  reduce using rule 58 (var_para_list)


state 254

   52 parameters: LP para_decl_list RP .

    $default  reduce using rule 52 (parameters)


state 255

   54 para_decl_list: para_decl_list SEMI . para_type_list

    ID   shift, and go to state 84
    VAR  shift, and go to state 236

    name_list       go to state 237
    para_type_list  go to state 262
    var_para_list   go to state 240
    val_para_list   go to state 241


state 256

   56 para_type_list: var_para_list COLON . simple_type_decl

    ID        shift, and go to state 17
    MINUS     shift, and go to state 125
    LP        shift, and go to state 126
    INTEGER   shift, and go to state 58
    SYS_CON   shift, and go to state 60
    SYS_TYPE  shift, and go to state 127
    CHAR      shift, and go to state 62
    STRING    shift, and go to state 63
    REAL      shift, and go to state 64

    NAME              go to state 130
    const_value       go to state 131
    simple_type_decl  go to state 263


state 257

   57 para_type_list: val_para_list COLON . simple_type_decl

    ID        shift, and go to state 17
    MINUS     shift, and go to state 125
    LP        shift, and go to state 126
    INTEGER   shift, and go to state 58
    SYS_CON   shift, and go to state 60
    SYS_TYPE  shift, and go to state 127
    CHAR      shift, and go to state 62
    STRING    shift, and go to state 63
    REAL      shift, and go to state 64

    NAME              go to state 130
    const_value       go to state 131
    simple_type_decl  go to state 264


state 258

   49 function_head: FUNCTION ID parameters COLON simple_type_decl .

    $default  reduce using rule 49 (function_head)


state 259

   89 for_stmt: FOR ID ASSIGN expression direction expression DO stmt .

    $default  reduce using rule 89 (for_stmt)


state 260

   31 simple_type_decl: MINUS const_value DOT DOT MINUS const_value .

    $default  reduce using rule 31 (simple_type_decl)


state 261

   33 array_type_decl: ARRAY LB simple_type_decl RB OF type_decl .

    $default  reduce using rule 33 (array_type_decl)


state 262

   54 para_decl_list: para_decl_list SEMI para_type_list .

    $default  reduce using rule 54 (para_decl_list)


state 263

   56 para_type_list: var_para_list COLON simple_type_decl .

    $default  reduce using rule 56 (para_type_list)


state 264

   57 para_type_list: val_para_list COLON simple_type_decl .

    $default  reduce using rule 57 (para_type_list)
